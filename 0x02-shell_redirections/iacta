In this lesson we are going to unleash what may be the coolest feature of the command

line. It's called I/O redirection. The “I/O” stands for input/output and with this facility we

can redirect the input and output of commands to and from files, as well as connect multiple commands together into powerful command pipelines. To show off this facility, we

will introduce the following commands:

● cat – Concatenate files

● sort – Sort lines of text

● uniq – Report or omit repeated lines

● grep – Print lines matching a pattern

● wc – Print newline, word, and byte counts for each file

● head – Output the first part of a file

● tail – Output the last part of a file

● tee – Read from standard input and write to standard output and files

Standard Input, Output, and Error

Many of the programs that we have used so far produce output of some kind. This output

often consists of two types:

• The program's results, that is, the data the program is designed to produce

• Status and error messages that tell us how the program is getting along

If we look at a command like ls, we can see that it displays its results and its error messages on the screen.

Keeping with the Unix theme of “everything is a file,” programs such as ls actually send

their results to a special file called standard output (often expressed as stdout) and their

status messages to another file called standard error (stderr). By default, both standard

output and standard error are linked to the screen and not saved into a disk file.
output and standard error are linked to the screen and not saved into a disk file.
